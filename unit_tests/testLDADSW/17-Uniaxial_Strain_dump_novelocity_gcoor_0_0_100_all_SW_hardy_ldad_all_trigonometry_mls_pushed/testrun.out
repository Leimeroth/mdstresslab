   
   ----------------------------------------------------------------------------
   
   M D S t r e s s L a b
   
   
   This code is distributed under the CDDL open source license
   
   Authors: N. C. Admal, Min Shi and E. B. Tadmor (University of Minnesota)
   
   Version 2.0.0 MPI
   
   For more information contact tadmor@umn.edu
   
   ----------------------------------------------------------------------------
   
   Number of processor(s) used: 1

 **Reading species data**
   Species on file:
     Si          0.0028085000000000
   Total number of species in file = 1
   Total number of species in the configuration file = 1
   Species list in configuration:
   Si

 **Reading grid data**
   Define the grid based on coordinates Cauchy     T and First PK:     T
   Starting position Cauchy and First PK:       25.0000000000000000      25.0000000000000000      20.0000000000000000
   Ending position Cauchy and First PK:       25.0000000000000000      25.0000000000000000      30.0000000000000000
   Number of divs : x-dir Cauchy and first PK = 0
                    y-dir Cauchy and first PK = 0
                    z-dir Cauchy and first PK = 100
   Write to grid file Cauchy                  = grid_cauchy.data
   Write to grid file first PK                = grid_pk1.data

 **Reading interatomic potential**
   Model name is: SW_StillingerWeber_1985_Si__MO_405512056662_005

 **Reading rigidity settings**
   Projection =          F

 **Reading stress settings**
   Calculating Hardy stress:     T
   Calculating Hardy stress directly on deformed configuration:     T
   Cauchy Hardy average domain: ldad,     T
   Using lattice-dependent averaging domain on deformed configuration:     T
   Cauchy Hardy vectors:
   1st vector:        5.4309497784052096       0.0000000000000000       0.0000000000000000
   2nd vector:        0.0000000000000000       5.4852592761892618       0.0000000000000000
   3rd vector:        0.0000000000000000       0.0000000000000000       5.4309497784052096
   Using ldad_trigonometry
   Using trigonometry weighting function for LDAD.
   Calculating Hardy stress:     T
   Calculating Hardy stress on reference configuration (First PK/engineering stress):     T
   First PK-Hardy average domain: ldad,     T
   First PK-Hardy vectors:
   1st vector:        5.4309497784052096       0.0000000000000000       0.0000000000000000
   2nd vector:        0.0000000000000000       5.4309497784052096       0.0000000000000000
   3rd vector:        0.0000000000000000       0.0000000000000000       5.4309497784052096
   Using ldad_trigonometry
   Using trigonometry weighting function for LDAD.
   Using MLS to push the first PK stress to Cauchy stress:     T
   Calculating pushed cauchy stress:     T
   Using shperical MLS-averaging domain for constructing displacement fields:     T
   Using sphere_cubic_spline for MLS weighting function.

 **Start calculating the stress tensor**
   Starting force calculation :
   Cutoff radius from model =        3.7711800000000002
   Turning off pbc
   Total number of atoms = 12167
   number of model routine names = 8
   Constructing atom neighbor list
   Building bins in this region MAX:       57.0249726733547035      57.5952224000872519      57.0249726733547035
   Building bins in this region MIN:       -4.0732123339039088      -4.1139444572419475      -4.0732123339039088
   nxbin: 8; dxbin:        7.6372731259073268
   nybin: 8; dybin:        7.7136458571661501
   nzbin: 8; dzbin:        7.6372731259073268
   nbin: 512
   max_pairs_per_atom: 86
   Allocating array size of total_neigh, which is the total # of neighbors =     677200
   Neighbor List Construction Finish!

 **Calculating the Cauchy stress tensor**
   
   Looping over all bonds to calculate the Cauchy stress tensors.

 **Setting the Cauchy stress grid**
   Writing grid points to file grid_cauchy.data
   Number of grid points = 101
   Grid points set finished!
   Constructing grid neighbor list
   Building bins in this region MAX:       57.0249726733547035      57.5952224000872519      57.0249726733547035
   Building bins in this region MIN:       -4.0732123339039088      -4.1139444572419475      -4.0732123339039088
   nxbin: 3; dxbin:       20.3660616690862035
   nybin: 3; dybin:       20.5697222857764004
   nzbin: 3; dzbin:       20.3660616690862035
   nbin: 27
   Performance alert: Maximum # of Neighbors per grid increased to 800
   Performance alert: Maximum # of Neighbors per grid increased to 1600
   Performance alert: Maximum # of Neighbors per grid increased to 3200
   Grid Neighbor List Construction Finish!
   Grid Neighbor List Construction cost:        0.1226699999999999
   Dividing grid points. 1 processor(s) has(have) 101 grid points.
   Dividing grid points. 0 processor(s) has(have) 100 grid points.
   
   Looping over all bonds to calculate the Cauchy-Hardy stress tensors.
   Grid point Cauchy-Hardy: 100
   Grid point Cauchy-Hardy: 101

 **Writing Cauchy-Hardy stress tensor**
   
   Writing potential part of Cauchy-Hardy stress tensor (direct) to file hardy_cauchy_direct.str
   Writing kinetic part of Cauchy-Hardy stress tensor (direct) to file hardy_kin_cauchy_direct.str
   Calculating hardy Cauchy stress runs in       15.3426990000000014 s.

 **Calculating the first pk stress tensor**
   
   Looping over all bonds to calculate the first pk stress tensors.

 **Setting the first PK stress grid**
   Writing grid points to file grid_pk1.data
   Number of grid points = 101
   Grid points set finished!
   Constructing grid neighbor list
   Building bins in this region MAX:       57.0249726733547035      57.0249726733547035      57.0249726733547035
   Building bins in this region MIN:       -4.0732123339039088      -4.0732123339039088      -4.0732123339039088
   nxbin: 3; dxbin:       20.3660616690862035
   nybin: 3; dybin:       20.3660616690862035
   nzbin: 3; dzbin:       20.3660616690862035
   nbin: 27
   Performance alert: Maximum # of Neighbors per grid increased to 800
   Performance alert: Maximum # of Neighbors per grid increased to 1600
   Performance alert: Maximum # of Neighbors per grid increased to 3200
   Grid Neighbor List Construction Finish!
   Grid Neighbor List Construction cost:        0.1102430000000005
   Dividing grid points. 1 processor(s) has(have) 101 grid points.
   Dividing grid points. 0 processor(s) has(have) 100 grid points.
   
   Looping over all bonds to calculate the first pk-Hardy stress tensors.
   Grid point first pk-Hardy: 100
   Grid point first pk-Hardy: 101

 **Writing first pk-Hardy stress tensor**
   
   Writing potential part of first pk-Hardy stress tensor to file hardy_pk1.str
   Writing kinetic part of first pk-Hardy stress tensor to file hardy_kin_pk1.str
   Calculating tsai pk1 stress runs in       15.2893049999999988 s.

 
   Start calculating the deformation gradient tensors using MLS method.
   Constructing grid neighbor list
   Building bins in this region MAX:       57.0249726733547035      57.0249726733547035      57.0249726733547035
   Building bins in this region MIN:       -4.0732123339039088      -4.0732123339039088      -4.0732123339039088
   nxbin: 1; dxbin:       61.0981850072586141
   nybin: 1; dybin:       61.0981850072586141
   nzbin: 1; dzbin:       61.0981850072586141
   nbin: 1
   Performance alert: Maximum # of Neighbors per grid increased to 800
   Performance alert: Maximum # of Neighbors per grid increased to 1600
   Performance alert: Maximum # of Neighbors per grid increased to 3200
   Performance alert: Maximum # of Neighbors per grid increased to 6400
   Performance alert: Maximum # of Neighbors per grid increased to 12800
   Grid Neighbor List Construction Finish!
   Grid Neighbor List Construction cost:        0.7574229999999993
   Allocating the deformation gradient tensors.
   
   Looping over all atoms to calculate the deformation gradient tensors.
   Grid point deformation gradient tensors: 100
   Grid point deformation gradient tensors: 101

 
   Writing deformation gradient tensor to file hardy_F.str

 
   Writing grid points corresponding to deformed configuration to file gpt_i_pushed_f_MLS.data
   Construct deformation gradient calculation costs:        1.2090760000000031 s.

 
   Start calculating the Cauchy stress tensors using push forward method.
   Allocating the Cauchy-Hardy stress tensors.
   
   Looping over all tensors to calculate the pushed Cauchy-Hardy stress tensors.
   Grid point pushing: 100
   Grid point pushing: 101

 **Writing Cauchy-Hardy stress tensor**
   
   Writing potential part of Cauchy-Hardy stress tensor (pushed) to file hardy_cauchy_pushed.str
   Writing kinetic part of Cauchy-Hardy stress tensor (pushed) to file hardy_kin_cauchy_pushed.str
   Pushing Cauchy-Hardy stress tensors calculation costs:        0.0024949999999961 s.
   Stress computation finished!

 **Deallocating data**
   MDStressLab runs in       35.0960389649262652 s.
